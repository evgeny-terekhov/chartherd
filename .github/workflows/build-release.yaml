name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, linux, darwin]
        arch: [amd64, arm64]
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Build binaries
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        go build -ldflags '-w -s' -trimpath -o dist/chartherd-${{ matrix.os }}-${{ matrix.arch }} ./cmd/chartherd

    - name: Upload binaries as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: dist/

  build-and-push-container:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU for multi-arch builds
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push multi-arch container images
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/chartherd:${{ github.ref_name }}
          ghcr.io/${{ github.repository_owner }}/chartherd:latest

  publish-release:
    runs-on: ubuntu-latest
    needs: [build-binaries, build-and-push-container]
    steps:
    - name: Download binaries artifact
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: dist/

    - name: Create GitHub Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload binaries to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist/chartherd-*
        asset_name: chartherd-${{ matrix.os }}-${{ matrix.arch }}

